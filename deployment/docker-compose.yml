version: '3'

services:
  redis:
    image: 'redis:8-alpine'
    container_name: redis
    restart: always
    ports:
      - '6380:6379'
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      retries: 5
  database:
    image: 'postgres:14.17'
    container_name: postgresql_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5433:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 5s
      retries: 5
  backend-app:
    container_name: backend
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DB_HOST: database
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_PORT: 5432
      REDIS_URL: redis://redis:6379
    build:
      context: ../backend
      dockerfile: 'Dockerfile'
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
  frontend-app:
    container_name: frontend
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_API_URL: '/api/v1'
    ports:
      - "8080:80"
    depends_on:
      - backend-app
    volumes:
      - uploads_data:/app/uploads

volumes:
  uploads_data:
  redis-data:
